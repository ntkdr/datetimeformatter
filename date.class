public class Main {
    public static void main(String[] args) {
        // Example input timestamps with different precisions
        String millisTimestamp = "2024-05-08T12:30:45.123Z"; // Millisecond precision with UTC
        String microsTimestamp = "2024-05-08T12:30:45.123456Z"; // Microsecond precision with UTC
        String nanosTimestamp = "2024-05-08T12:30:45.123456789Z"; // Nanosecond precision with UTC
        
        // Convert input timestamps to epoch timestamps
        long millisEpochTimestamp = convertToEpochTimestamp(millisTimestamp, "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
        long microsEpochTimestamp = convertToEpochTimestamp(microsTimestamp, "yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'");
        long nanosEpochTimestamp = convertToEpochTimestamp(nanosTimestamp, "yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSS'Z'");
        
        // Output epoch timestamps
        System.out.println("Millisecond Epoch Timestamp: " + millisEpochTimestamp);
        System.out.println("Microsecond Epoch Timestamp: " + microsEpochTimestamp);
        System.out.println("Nanosecond Epoch Timestamp: " + nanosEpochTimestamp);
    }

    // Convert input timestamp to epoch timestamp
    private static long convertToEpochTimestamp(String inputTimestamp, String inputFormat) {
        SimpleDateFormat dateFormat = new SimpleDateFormat(inputFormat);
        
        try {
            // Parse input timestamp
            Date parsedDate = dateFormat.parse(inputTimestamp);
            
            // Convert to Instant (UTC)
            Instant instant = parsedDate.toInstant();
            
            // Extract epoch timestamp
            return instant.getEpochSecond();
        } catch (ParseException e) {
            e.printStackTrace();
            return -1; // Error occurred
        }
    }
}
